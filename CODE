# Calculates Basal Metabolic Rate (BMR) using Mifflin-St Jeor Equation
def calculate_bmr(weight: float, height: float, age: int, sex: str): 
    if sex == "male":
        return 10 * weight + 6.25 * height - 5 * age + 5
    elif sex == "female":
        return 10 * weight + 6.25 * height - 5 * age - 161
    else:
        raise ValueError("Invalid sex. Must enter 'male' or 'female'.")


# Calculates daily calorie and macronutrient needs based on activity level and fitness goals
def calculate_macros(bmr: float, weight: float, activity_level: str, goal: str):
    activity_multipliers = {
        "sedentary": 1.2,
        "lightly_active": 1.375,
        "moderately_active": 1.55,
        "very_active": 1.725,
        "extremely_active": 1.9
    }

    goal_adjustments = {
        "maintain": 0,
        "gain": 500,
        "lose": -500
    }

    if activity_level not in activity_multipliers:
        raise ValueError("Invalid activity level entered.")
    if goal not in goal_adjustments:
        raise ValueError("Invalid fitness goal entered.")

    daily_calories = bmr * activity_multipliers[activity_level] + goal_adjustments[goal]
    protein = weight * 2.2 # 2.2g protein per kg of body weight
    fat = 0.3 * daily_calories / 9 # 30% calories from fat
    carbs = (daily_calories - (protein * 4 + fat * 9)) / 4 # Remaining calories for carbs

    return{
        "calories": round(daily_calories, 2),
        "protein": round(protein, 2),
        "fat": round(fat, 2),
        "carbs": round(carbs, 2)
    }


def main():
    print("Welcome to QuickCal!")
    # Collects user inputs
    weight = float(input("Enter your weight in kg: "))
    height = float(input("Enter your height in cm: "))
    age = int(input("Enter your age: "))
    sex = input("Enter your sex (male or female): ")
    activity_level = input("Enter your activity level (sedentary, lightly_active, moderately_active, very_active, extremely_active): ")
    goal = input("Enter your fitness goal (maintain, gain, or lose): ")

    # Performs calculations
    bmr = calculate_bmr(weight, height, age, sex)
    results = calculate_macros(bmr, weight, activity_level, goal)

    # Displays results
    print("\nYour Daily Needs")
    print(f"\nCalories: {results['calories']} kcal")
    print(f"\nProtein: {results['protein']} g")
    print(f"\nFat: {results['fat']} g")
    print(f"\nCarbs: {results['carbs']} g")

if __name__ == "__main__":
    main()
